{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.c61986b1.js","sourceRoot":"..","sourcesContent":["// type Store = {\r\n//   currentPage: number;\r\n//   feeds: NewsFeed[];\r\n// }\r\n\r\ninterface Store {\r\n  currentPage: number;\r\n  feeds: NewsFeed[];\r\n}\r\n\r\n// type News = {\r\n//   id: number;\r\n//   time_ago: string;\r\n//   title: string;\r\n//   url: string;\r\n//   user: string;\r\n//   content: string;\r\n// }\r\n\r\ninterface News {\r\n  readonly id: number; // id를 바꿀 수 없도록 지정\r\n  readonly time_ago: string;\r\n  readonly title: string;\r\n  readonly url: string;\r\n  readonly user: string;\r\n  readonly content: string;\r\n}\r\n\r\n// type NewsFeed = News & {\r\n//   comments_count: number;\r\n//   points: number;\r\n//   read?: boolean; // ?의 뜻은???\r\n// }\r\n\r\ninterface NewsFeed extends News {\r\n  readonly comments_count: number;\r\n  readonly points: number;\r\n  read?: boolean; // ?의 뜻은???\r\n}\r\n\r\n// type NewsDetail = News & {\r\n//   comments: NewsComment[];\r\n// }\r\n\r\ninterface NewsDetail extends News {\r\n  readonly comments: NewsComment[];\r\n}\r\n\r\n// type NewsComment = News &{\r\n//   comments: NewsComment[];\r\n//   level: number; // 댓글, 대댓글, 대대댓글 확인을 위한 depth\r\n// }\r\n\r\ninterface NewsComment extends News {\r\n  readonly comments: NewsComment[];\r\n  readonly level: number; // 댓글, 대댓글, 대대댓글 확인을 위한 depth\r\n}\r\n\r\nconst container: HTMLElement | null = document.getElementById('root');\r\nconst ajax:XMLHttpRequest = new XMLHttpRequest(); // ajax 란?\r\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json'\r\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json'\r\nconst store: Store = {\r\n  currentPage: 1,\r\n  feeds: [],\r\n};\r\n\r\n// class Api {\r\n//   url: string;\r\n//   ajax: XMLHttpRequest;\r\n\r\n//   constructor(url: string) {\r\n//     this.url = url;\r\n//     this.ajax = new XMLHttpRequest();\r\n//   }\r\n\r\n//   protected getRequest<AjaxResponse>(): AjaxResponse {\r\n//     this.ajax.open('GET', this.url, false);\r\n//     this.ajax.send();\r\n\r\n//     return JSON.parse(this.ajax.response);\r\n//   }\r\n// };\r\n\r\nconst applyApiMixins = (targetClass: any, baseClasses: any[]): void => { // 믹스인을 활용한 상속 기법\r\n  baseClasses.forEach(baseClass => {\r\n    Object.getOwnPropertyNames(baseClass.prototype).forEach(name => {\r\n      const descriptor = Object.getOwnPropertyDescriptor(baseClass.prototype, name);\r\n\r\n      if (descriptor) {\r\n        Object.defineProperty(targetClass.prototype, name, descriptor);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nclass Api {\r\n  getRequest<AjaxResponse>(url: string): AjaxResponse {\r\n    ajax.open('GET', url, false);\r\n    ajax.send();\r\n\r\n    return JSON.parse(ajax.response);\r\n  }\r\n};\r\n\r\n// class NewsFeedApi extends Api { // extends를 활용한 상속\r\n//   getData(): NewsFeed[] {\r\n//     return this.getRequest<NewsFeed[]>();\r\n//   }\r\n// };\r\n\r\n// class NewsDetailApi extends Api {\r\n//   getData(): NewsDetail {\r\n//     return this.getRequest<NewsDetail>();\r\n//   }\r\n// };\r\n\r\nclass NewsFeedApi { // 믹스인을 활용한 상속\r\n  getData(): NewsFeed[] {\r\n    return this.getRequest<NewsFeed[]>(NEWS_URL);\r\n  }\r\n};\r\n\r\nclass NewsDetailApi {\r\n  getData(id: string): NewsDetail {\r\n    return this.getRequest<NewsDetail>(CONTENT_URL.replace('@id', id));\r\n  }\r\n};\r\n\r\ninterface NewsFeedApi extends Api {};\r\ninterface NewsDetailApi extends Api {};\r\n\r\napplyApiMixins(NewsFeedApi, [Api]);\r\napplyApiMixins(NewsDetailApi, [Api]);\r\n\r\n// const getData = <T>(url: string): NewsFeed[] | newsDetail => {\r\nconst getData = <AjaxResponse>(url: string): AjaxResponse => { // getData 함수는 return 값 종류가 2개 이다... -> 제너릭을 사용\r\n  ajax.open(\"GET\", url, false);\r\n  ajax.send();\r\n\r\n  return JSON.parse(ajax.response);\r\n};\r\n\r\nconst makeFeeds = (feeds: NewsFeed[]): NewsFeed[] => {\r\n  for (let i = 0 ; i < feeds.length; i++) { // i -> 타입 추론\r\n    feeds[i].read = false;\r\n  }\r\n\r\n  return feeds;\r\n}\r\n\r\nconst updateView = (html: string): void => {\r\n  if (container != null) {\r\n    container.innerHTML = html;\r\n  } else {\r\n    console.log(\"최상위 container 가 없습니다.\")\r\n  }\r\n}\r\n\r\nconst newsFeed = (): void => {\r\n  const api = new NewsFeedApi();\r\n\r\n  let newsFeed: NewsFeed[] = store.feeds;\r\n  const newsList = [];\r\n  let template = `\r\n    <div class = \"bg-gray-600 min-h-screen\">\r\n      <div class = \"bg-white text-xl\">\r\n        <div class = \"mx-auto px -4\">\r\n          <div class = \"flex justify-between items-center py-6\">\r\n            <div class=\"flex justify-start\">\r\n              <h1 class=\"font-extrabold\">Hacker News</h1>\r\n            </div>\r\n            <div class=\"items-center justify-end\">\r\n              <a href='#/page/{{__prev_page__}}'>\r\n                Previous\r\n              </a>\r\n              <a href='#/page/{{__next_page__}}'>\r\n                Next\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-4 text-2xl text-gray-700\">\r\n        {{__news_feed__}}\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  if (newsFeed.length == 0) {\r\n    // newsFeed = store.feeds = makeFeeds(getData<NewsFeed[]>(NEWS_URL));\r\n    newsFeed = store.feeds = makeFeeds(api.getData());\r\n  }\r\n\r\n  for(let i = (store.currentPage - 1)*10 ; i < store.currentPage * 10; i++) {\r\n    const news =`\r\n    <div class=\"p-6 ${newsFeed[i].read ? 'bg-gray-500' : 'bg-white'}  mt-6 rounded-lg shadow-md transition-colors duration-500 hover:bg-green-100\">\r\n      <div class=\"flex\">\r\n        <div class=\"flex-auto\">\r\n          <a href=\"#${newsFeed[i].id}\">${newsFeed[i].title}</a>\r\n        </div>\r\n        <div class=\"text-center text-sm\">\r\n          <div class=\"w-10 text-white bg-green-300 rounded-lg px-0 py-2\">${newsFeed[i].comments_count}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"flex mt-3\">\r\n        <div class = \"grid grid-cols-3 text-sm text-gray-500\">\r\n        <div class=\"fas fa-user mr-1\"></i>${newsFeed[i].user}</div>\r\n        <div class=\"fas fa-heart mr-1\"></i>${newsFeed[i].points}</div>\r\n        <div class=\"far fa-clock mr-1\"></i>${newsFeed[i].time_ago}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    `;\r\n    newsList.push(news);\r\n  }\r\n\r\n  template = template.replace('{{__news_feed__}}', newsList.join(''));\r\n  template = template.replace('{{__prev_page__}}', String(store.currentPage > 1 ? store.currentPage - 1 : 1));\r\n  template = template.replace('{{__next_page__}}', String(store.currentPage + 1));\r\n\r\n  // if (container != null) {\r\n  //   container.innerHTML = template;\r\n  // } else {\r\n  //   console.log(\"최상위 container 가 없습니다.\")\r\n  // }\r\n  updateView(template);\r\n};\r\n\r\nconst newsDetail = (): void => {\r\n  const id = location.hash.substring(1);\r\n  const api = new NewsDetailApi();\r\n  // const newsContent = getData<NewsDetail>(CONTENT_URL.replace('@id', id));\r\n  const newsContent = api.getData(id);\r\n\r\n  let template = `\r\n  <div class=\"bg-gray-600 min-h-screen pb-8\">\r\n    <div class=\"bg-white text-xl\">\r\n      <div class=\"mx-auto px-4\">\r\n        <div class=\"flex justify-between itesm-center py-6\">\r\n          <div class=\"flex justify-start\">\r\n            <h1 class=\"font-extrabold\">Hacker News</h1>\r\n          </div>\r\n          <div class=\"items-center justify-end\">\r\n            <a href=\"#/page/${store.currentPage}\" class=\"text-gray-500\">\r\n              <i class=\"fa fa-times\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"h-full border rounded-xl bg-white m-6 p-4\">\r\n      <h2>${newsContent.title}</h2>\r\n      <div class=\"text-gray-400 h-20\">\r\n        ${newsContent.content}\r\n      </div>\r\n      {{__comments__}}\r\n    </div>\r\n  </div>\r\n  `;\r\n\r\n  for (let i = 0; i < store.feeds.length; i++) {\r\n    if (store.feeds[i].id == Number(id)) {\r\n      store.feeds[i].read = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  const makeComment = (comments: NewsComment[]): string => {\r\n    const commentString = [];\r\n\r\n    for(let i = 0; i < comments.length; i++) {\r\n      const comment: NewsComment = comments[i];\r\n      commentString.push(`\r\n        <div style=\"padding-left: ${20 + comment.level * 40}px;\" class=\"mt-4\">\r\n          <div class=\"text-gray-400\">\r\n            <i class=\"fa fa-sort-up mr-2\"></i>\r\n            <strong>${comment.user}</strong> ${comment.time_ago}\r\n          </div>\r\n          <p class=\"text-gray-700\">${comment.content}</p>\r\n        </div>\r\n      `);\r\n\r\n      if(comments[i].comments.length > 0) {\r\n        commentString.push(makeComment(comments[i].comments));\r\n      }\r\n    }\r\n\r\n    return commentString.join('');\r\n  }\r\n\r\n  // if (container != null) {\r\n  //   container.innerHTML = template.replace(`{{__comments__}}`, makeComment(newsContent.comments));\r\n  // } else {\r\n  //   console.log(\"최상위 container 가 없습니다.\")\r\n  // }\r\n  updateView(template.replace(`{{__comments__}}`, makeComment(newsContent.comments)));\r\n};\r\n\r\n// router\r\nconst router = () => {\r\n  const routerPath = location.hash;\r\n\r\n  if (routerPath === '') {\r\n    newsFeed();\r\n  } else if (routerPath.indexOf(('#/page/')) >= 0) {\r\n    store.currentPage = Number(routerPath.substring(7));\r\n    console.log(store.currentPage);\r\n    newsFeed();\r\n  } else {\r\n    newsDetail();\r\n  }\r\n};\r\n\r\nwindow.addEventListener('hashchange', router);\r\n\r\nrouter();"]}